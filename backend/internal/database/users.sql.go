// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (name, password)
VALUES ($1, $2)
RETURNING id, name, password
`

type CreateUserParams struct {
	Name     string
	Password string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser, arg.Name, arg.Password)
	var i User
	err := row.Scan(&i.ID, &i.Name, &i.Password)
	return i, err
}

const getUserIdByName = `-- name: GetUserIdByName :one
SELECT id 
FROM users
WHERE name = $1
LIMIT 1
`

func (q *Queries) GetUserIdByName(ctx context.Context, name string) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, getUserIdByName, name)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
